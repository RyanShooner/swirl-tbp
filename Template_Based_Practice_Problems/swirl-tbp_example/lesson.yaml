- Class: meta
  Course: swirl-tbp  
  Lesson: template-based practice example problems 
  Author: Garrett M. Dancik
  Type: Standard
  Organization: Eastern Connecticut State University
  Version: 1.0 
  
- Class: text
  Output: The questions that follow are designed to demonstrate the swirl-tbp package 

- Class: cmd_question
  NumTimes: 2 
  Token: |
    num1 = sample(1:10)
    num2 = sample(11:20) 
  Output: Create a vector named 'values' that holds the values <num1> and <num2>.
  CorrectAnswer: values <- c(<num1>,<num2>)
  AnswerTests: omnitest(correctExpr='values <- c(<num1>,<num2>)')

- Class: cmd_question
  Token: |
   n = sample(3:4,1)   # randomize the amount of numbers generated 
   r = sample(1:20,4)  # generate 4 random numbers
   if (n == 3) {r = r[1:3]} # but possibly keep only 3
   # generate a random variable name (using function in initLesson.R)
   v = gen.var()	
   nums = paste0(r, collapse = ',')  # store the numbers in a string
  Output: Create a vector named <v> that stores the numbers <nums> 
  CorrectAnswer: <v> <- c(<nums>) 
  AnswerTests: omnitest(correctExpr='<v> <- c(<nums>)')

- Class: multi_cmd_question
  Token: num.sd = runif(1,1,3); num.sd = round(num.sd, 1); var = gen.var()
  Output: In a population that is normally distributed, calculate the probability that a randomly selected observation is more than <num.sd> standard deviations from the mean. Store your answer in the variable '<var>', and type submit() when you are finished. 
  CorrectAnswer: <var> = 2*(1 - pnorm(<num.sd>))
  AnswerTests: var_has_value('<var>', 2*(1 - pnorm(<num.sd>)), 1e-10)
